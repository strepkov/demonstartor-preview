package controller11;

component ParkingController {
    port
        in Q(-200m:200m) backLeftSensor,
        in Q(-200m:200m) backRightSensor,
        in Q(-200m:200m) frontLeftSensor,
        in Q(-200m:200m) frontRightSensor,
        in Q(-200m:200m) frontLeftSideSensor,
        in Q(-200m:200m) backLeftSideSensor,
        in B reverseMove,
        out Q(-35°:35°) steeringAngle,
        out B moveForward,
        out B status;

    implementation Math{
        
    status = false;
    
    // Maybe divide the component to clearer steps?
    if(reverseMove)
        // fix the state of moving direction
        static B forwardState = false;
        
        moveForward = false;
        steeringAngle = false;
        
        if reverseMove
            steeringAngle = 1°;
        end
        
        if (reverseMove && (backLeftSensor < 2m))
            steeringAngle = -1°;
        end
        
        // Car has to be parallel to the road edge
        // Go forward when the back closer then 3m
        if (reverseMove && ((backRightSensor == backLeftSensor) || ((backRightSensor < 3m) && (backLeftSensor < 3m))))
            forwardState = true;
        end
        
        // Stop when the car closer then 3m to front car
        if (((frontRightSensor < 3m) || (frontLeftSensor < 3m)) && forwardState)
            status = true;
        else
            status = false;
        end
        
        // if car moving forward, does not change the car angle
        if forwardState
            steeringAngle = 0°;
        end
        
        // align the car
        if (forwardState && (frontLeftSideSensor > backLeftSideSensor))
            steeringAngle = -0.5°;
        end
        
        if (forwardState && (frontLeftSideSensor < backLeftSideSensor))
            steeringAngle = 0.5°;
        end
        
        moveForward = forwardState;
    end
    }
}