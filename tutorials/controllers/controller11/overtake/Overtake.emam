package controller11.overtake;

import PassCarController;
import OvertakeController;
import OvertakeVelocityController;

component Overtake {
	port                                    
		in Q(-200m:200m) frontLeftSensor,
        in Q(-200m:200m) frontRightSensor,
        in Q(-200m:200m) frontRightSideSensor,
        in Q(-200m:200m) frontLeftSideSensor,
        in Q(-200m:200m) backLeftSideSensor,
        in Q(-200m:200m) backRightSideSensor,
        in Q(0km/h : 250km/h) velocity,
        in B active,
        out B activatePassChecker,
		out Q(-2m/s^2:2m/s^2) acceleration,
		out Q steering;

    instance OvertakeController<50m> oc;
    connect frontLeftSensor -> oc.frontLeftSensor;
    connect frontRightSensor -> oc.frontRightSensor;
    connect frontRightSideSensor -> oc.frontRightSideSensor;
    connect frontLeftSideSensor -> oc.frontLeftSideSensor;
    connect backLeftSideSensor -> oc.backLeftSideSensor;
    connect backRightSideSensor -> oc.backRightSideSensor;
    connect active -> oc.active;
    connect oc.steering -> steering;

    instance PassCarController pcc;
    connect frontRightSideSensor -> pcc.frontRightSideSensor;
    connect backRightSideSensor -> pcc.backRightSideSensor;
    connect oc.activatePassChecker -> pcc.active;
    connect oc.activatePassChecker -> activatePassChecker;
    connect pcc.passed ->oc.passed;

    instance OvertakeVelocityController ovc;
    connect velocity -> ovc.velocity;
    connect ovc.acceleration -> acceleration;
}