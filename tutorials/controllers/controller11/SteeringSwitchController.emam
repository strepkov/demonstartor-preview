package controller11;

import controller11.atomic.*;

component SteeringSwitchController {
    port
        in Q steeringParking,
        in Q steeringPassObjects,
        in Q steeringTrack,
        in Q steeringAlign,
        in Q steeringOvertake,
        in B activeTrack,
        in B activePassObject,
        in B activeParking,
        in B activeAlign,
        in B activeFollow,
        in B activeOvertake,
        in B activeObstacle,
        out Q steering;

    /*    
        instance SwitchQ sw1, sw2, sw3, sw4, sw5, sw6, sw7;
        instance ConstantQ(0) const_0;

        connect activeTrack -> sw1.cond;
        connect steeringTrack -> sw1.in1;
        connect sw1.out1 -> steering;

        connect activePassObject -> sw2.cond;
        connect steeringPassObjects -> sw2.in1;
        connect sw2.out1 -> sw1.in2;

        connect activeParking -> sw3.cond;
        connect steeringParking -> sw3.in1;
        connect sw3.out1 -> sw2.in2;

        connect activeAlign -> sw4.cond;
        connect steeringAlign -> sw4.in1;
        connect sw4.out1 -> sw3.in2;

        connect activeFollow -> sw5.cond;
        connect steeringAlign -> sw5.in1;
        connect sw5.out1 -> sw4.in2;

        connect activeOvertake -> sw6.cond;
        connect steeringOvertake -> sw6.in1;
        connect sw6.out1 -> sw5.in2;

        connect activeObstacle -> sw7.cond;
        connect steeringTrack -> sw7.in1;
        connect const_0.out1 -> sw7.in2;
        connect sw7.out1 -> sw6.in2;

     */         

    implementation Math{

        steering = 0;
        
        if activeTrack
            steering = steeringTrack;
        end
        if activePassObject
            steering = steeringPassObjects;
        end
        if activeParking
            steering = steeringParking;
        end
        if activeAlign
            steering = steeringAlign;
        end
        if activeFollow
            steering = steeringAlign;
        end
        if activeOvertake
            steering = steeringOvertake;
        end
        if activeObstacle
            steering = steeringTrack;
        end
    }
}