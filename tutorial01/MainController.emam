package controller; // The name of the folder where all .emam files are located.

import VelocityController; // here has being imported the actual controller
import StopSimulationController;

component MainController{
    ports // There are listed the incoming ports, where data is transferred from the sensors.
        in Q(0m:200m) fl,                   //front left
        in Q(0m:200m) fr,                   //front right
        in Q(0m:200m) slf,                  //side left front
        in Q(0m:200m) slb,                  //side left back
        in Q(0m:200m) srf,                  //side right front
        in Q(0m:200m) srb,                  //side right back
        in Q(0m:200m) bl,                   //back left
        in Q(0m:200m) br,                   //back right

        in Q(0s:oos) time,                  //simulation time
        in Q(0km/h:250km/h) velocity,       //car's velocity

        in Q(-200m:200m) x,                 //car's position X
        in Q(-200m:200m) y,                 //car's position Y

        out Q(-2m/s^2:2m/s^2) acceleration, //car's acceleration 
        out Q(-180Â°:180Â°) steering,         //car's steering
        out B status;                       //whether the simulation is still running

    // When we have finished with the interface's description, we have to instantiate the actual controller
    // and connect it to the interface.

    instance VelocityController velocityController;

    connect velocity->velocityController.velocity;
    connect velocityController.acceleration->acceleration;

    //Here we have connected the incoming port - velocity(mainController) to our instantiated controller and its corresponding 
    //incoming port velocity. Then we connect outgoing port of velocityController.acceleration to the outgoing
    //port of our MainController.

    //Lastly we are going to instantiate the controller which will stop the execution when the conditions will be reached.
    //For this controller we will need incoming ports: velocity and time and outgoing: status. Connect them correspondingly.

    instance StopSimulationController stopSimulationController;

    connect velocity->stopSimulationController.velocity;
    connect time->stopSimulationController.time;
    connect stopSimulationController.status->status;
}